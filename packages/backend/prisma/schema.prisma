// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id          String   @id @default(cuid())
  did         String   @unique
  handle      String   @unique
  displayName String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true)
  
  sessions    OAuthSession[]
  posts       ScheduledPost[]
  
  @@map("users")
}

// OAuth Session model
model OAuthSession {
  id               String   @id @default(cuid())
  userId           String
  accessToken      String   @db.Text  // Encrypted
  refreshToken     String   @db.Text  // Encrypted
  dPopPrivateKey   String   @db.Text  // Encrypted
  dPopPublicKey    String   @db.Text
  expiresAt        DateTime
  refreshExpiresAt DateTime
  isActive         Boolean  @default(true)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, isActive])
  @@index([expiresAt])
  @@map("oauth_sessions")
}

// Scheduled Post model
model ScheduledPost {
  id          String     @id @default(cuid())
  userId      String
  content     String     @db.Text
  scheduledAt DateTime
  status      PostStatus @default(PENDING)
  
  // Execution metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  executedAt  DateTime?
  errorMsg    String?
  retryCount  Int      @default(0)
  blueskyUri  String?
  blueskyRkey String?
  
  // Relations
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([scheduledAt, status])
  @@index([userId, status])
  @@map("scheduled_posts")
}

enum PostStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
}